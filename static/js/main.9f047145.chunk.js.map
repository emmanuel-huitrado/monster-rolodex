{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","searchHandler","type","onChange","App","event","setState","searchMonster","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAIaA,EAAO,SAAUC,GAC1B,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJjBC,G,MAAW,SAAUR,GAC9B,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLtBO,G,MAAY,YAAuC,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,cAC5C,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCkCrEG,G,MAjCf,kDACE,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAaRa,cAAgB,SAACI,GACf,EAAKC,SAAS,CAACC,cAAeF,EAAMG,OAAOC,SAb3C,EAAKC,MAAQ,CACXb,SAAU,GACVU,cAAe,IAJA,EADrB,qDASE,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GACzF,EAAKT,SAAS,CAACT,SAAUkB,SAX/B,oBAmBE,WAAS,IAAD,EAC8BC,KAAKN,MAAjCb,EADF,EACEA,SAAUU,EADZ,EACYA,cACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAcY,kBAEtG,OACI,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,cAAee,KAAKf,gBAC5D,cAAC,EAAD,CAAUJ,SAAUoB,WA3B9B,GAAyBI,cCKVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9f047145.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = function (props){\r\n    return(\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name} />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = function (props){\r\n    return(\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = function({placeholder, searchHandler}){\r\n    return(\r\n        <input className='search' type='search' placeholder={placeholder} onChange={searchHandler} />\r\n    );\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { CardList } from \"./components/card-list/card-list.component\";\r\nimport { SearchBox} from \"./components/search-box/search-box.component\";\r\n\r\nimport './App.css';\r\n\r\nexport class App extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      monsters: [],\r\n      searchMonster: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\r\n      this.setState({monsters: users});\r\n    });\r\n  }\r\n\r\n  searchHandler = (event) => {\r\n    this.setState({searchMonster: event.target.value});\r\n  }\r\n\r\n  render(){\r\n    const { monsters, searchMonster } = this.state;\r\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchMonster.toLowerCase()));\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <h1>Monster Rolodex</h1>\r\n          <SearchBox placeholder='Search Monster' searchHandler={this.searchHandler} />\r\n          <CardList monsters={filteredMonsters} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}